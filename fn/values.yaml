# Default values for Fn
imagePullPolicy: Always

# If non-null, will override the cluster name
nameOverride: ''

# Secrets must be manually created in the namespace.
ingress:
  annotations:
    kubernetes.io/ingress.class: nginx
#    certmanager.k8s.io/cluster-issuer: letsencrypt
  tls:
#    - secretName: fn-tls
#      hosts:
#        - fn.local


fn_runner:
  replicas: 3
  image: fnproject/fnserver
  tag: latest
  resources: {}
  nodeSelector: {}
  tolerations: []
  grpc_port: 9191
  service:
    grpc_port: 9191
    type: ClusterIP
    annotations: {}
  env:
    FN_LOG_LEVEL: INFO

fn_lb_runner:
  image: fnproject/fnserver
  tag: latest
  resources: {}
  nodeSelector: {}
  tolerations: []
  container_port: 90
  grpc_port: 9191
  service:
    port: 90
    type: ClusterIP
    annotations: {}
    ingress_hostname: lb.fnservice.io
  env:
    FN_LOG_LEVEL: INFO

fn_api:
  image: fnproject/fnserver
  tag: latest
  resources: {}
  nodeSelector: {}
  tolerations: []
  container_port: 80
  service:
    port: 80
    type: ClusterIP
    annotations: {}
    ingress_hostname: api.fnservice.io
  env:
    FN_DB_URL: mysql://fnapp:$(FN_DB_PASSWD)@tcp($(FN_DB_HOST):3306)/fndb
    FN_MQ_URL: redis://$(FN_MQ_HOST):6379/
    FN_LOG_LEVEL: INFO

ui:
  enabled: true
  flowui:
    image: fnproject/flow
    tag: ui
    resources: {}
  service:
    port: 3000
    type: ClusterIP
    annotations: {}
    ingress_hostname: ui.fnservice.io

flow:
  image: fnproject/flow
  tag: 0.1.85
  logLevel: info
  service:
    port: 80
    type: ClusterIP
    annotations: {}
  resources: {}

##
## MySQL chart configuration
##
mysql:
  persistence:
    enabled: false
    nodeSelector: mysql-storage
    ## If defined, volume.beta.kubernetes.io/storage-class: <storageClass>
    ## Default: volume.alpha.kubernetes.io/storage-class: default
    ##
    # storageClass:
    storageClass: mysql
    accessMode: ReadWriteOnce
    size: 8Gi

  mysqlDatabase: fndb
  mysqlUser: fnapp
  mysqlPassword: boomsauce

##
## Redis chart configuration
##
redis:
  persistence:
    enabled: false
    nodeSelector: redis-storage
    storageClass: redis
    accessMode: ReadWriteOnce
    size: 8Gi
  usePassword: false

## Ingress configuration.
## ref: https://kubernetes.io/docs/user-guide/ingress/
##
ingress:
  enabled: false

rbac:
  enabled: true
